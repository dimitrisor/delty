name: CI1

permissions:
  packages: write
  contents: read

# The workflow will run whenever a pull request is created, updated, or merged
on:
  pull_request:

env:
  TAG: ${{ ( github.event_name == 'pull_request' && format('pr-{0}', github.event.number) ) || 'latest' }}

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: delty
          POSTGRES_USER: delty_user
          POSTGRES_PASSWORD: delty_pass
        options: >-
          --health-cmd "pg_isready -h localhost -p 5432 -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7.4
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping | grep PONG"

    env:
      DJANGO_SETTINGS_MODULE: "app.settings.test"
      DATABASE_URL: "postgres://delty_user:delty_pass@localhost:5432/delty"
    steps:
      - name: "Check DATABASE_URL"
        run: echo $DATABASE_URL
      - name: "Write DATABASE_URL to file"
        run: echo $DATABASE_URL > database_url.txt
      - name: "Print DATABASE_URL from file"
        run: cat database_url.txt
      - name: "Checkout GH repository"
        uses: actions/checkout@v4
      - name: "Setup Cue"
        uses: cue-lang/setup-cue@v1.0.0-alpha.2
        with:
          version: v0.4.3
      - name: "Install Poetry"
        run: pipx install poetry
      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.4
          cache: poetry
      - name: "Install packages"
        run: poetry install
      - name: "Run DB migrations"
        run: poetry run python manage.py migrate
      - name: "Run collectstatic"
        run: poetry run python manage.py collectstatic --noinput
      - name: "Activate Environment"
        run: source $(poetry env info --path)/bin/activate
      - name: "Cache Pre-commit"
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: "Install pre-commit"
        run: poetry run pip install pre-commit
      - name: "Run pre-commit"
        run: poetry run pre-commit run --show-diff-on-failure --color=always -a --hook-stage manual
      - name: "Run tests"
        run: poetry run coverage run --source='.' manage.py test &&
            poetry run coverage report -m &&
            poetry run coverage htmls.build-and-push.outputs.digest }}
